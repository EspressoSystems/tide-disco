(function() {var type_impls = {
"tide_disco":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Value\" class=\"impl\"><a href=\"#impl-Value\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Value</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_from</a>&lt;T&gt;(value: T) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, Error&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,</div></h4></section></summary><div class=\"docblock\"><p>Convert a <code>T</code> into <code>toml::Value</code> which is an enum that can represent\nany valid TOML data.</p>\n<p>This conversion can fail if <code>T</code>’s implementation of <code>Serialize</code> decides to\nfail, or if <code>T</code> contains a map with non-string keys.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_into\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_into</a>&lt;'de, T&gt;(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;T, Error&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Interpret a <code>toml::Value</code> as an instance of type <code>T</code>.</p>\n<p>This conversion can fail if the structure of the <code>Value</code> does not match the\nstructure expected by <code>T</code>, for example if <code>T</code> is a struct type but the\n<code>Value</code> contains something other than a TOML table. It can also fail if the\nstructure is correct but <code>T</code>’s implementation of <code>Deserialize</code> decides that\nsomething is wrong with the data, for example required struct fields are\nmissing from the TOML map or some number is too big to fit in the expected\nprimitive type.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>&lt;I&gt;(&amp;self, index: I) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;Value&gt;<div class=\"where\">where\n    I: Index,</div></h4></section></summary><div class=\"docblock\"><p>Index into a TOML array or map. A string index can be used to access a\nvalue in a map, and a usize index can be used to access an element of an\narray.</p>\n<p>Returns <code>None</code> if the type of <code>self</code> does not match the type of the\nindex, for example if the index is a string and <code>self</code> is an array or a\nnumber. Also returns <code>None</code> if the given key does not exist in the map\nor the given index is not within the bounds of the array.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get_mut</a>&lt;I&gt;(&amp;mut self, index: I) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut Value&gt;<div class=\"where\">where\n    I: Index,</div></h4></section></summary><div class=\"docblock\"><p>Mutably index into a TOML array or map. A string index can be used to\naccess a value in a map, and a usize index can be used to access an\nelement of an array.</p>\n<p>Returns <code>None</code> if the type of <code>self</code> does not match the type of the\nindex, for example if the index is a string and <code>self</code> is an array or a\nnumber. Also returns <code>None</code> if the given key does not exist in the map\nor the given index is not within the bounds of the array.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_integer\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_integer</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Extracts the integer value if it is an integer.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_integer\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_integer</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Tests whether this value is an integer.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_float\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_float</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.f64.html\">f64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Extracts the float value if it is a float.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_float\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_float</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Tests whether this value is a float.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bool\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_bool</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Extracts the boolean value if it is a boolean.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_bool\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_bool</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Tests whether this value is a boolean.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_str\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_str</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Extracts the string of this value if it is a string.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_str\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_str</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Tests if this value is a string.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_datetime\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_datetime</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;Datetime&gt;</h4></section></summary><div class=\"docblock\"><p>Extracts the datetime value if it is a datetime.</p>\n<p>Note that a parsed TOML value will only contain ISO 8601 dates. An\nexample date is:</p>\n<div class=\"example-wrap\"><pre class=\"language-notrust\"><code>1979-05-27T07:32:00Z\n</code></pre></div></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_datetime\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_datetime</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Tests whether this value is a datetime.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_array\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_array</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;Value&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Extracts the array value if it is an array.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_array_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_array_mut</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;Value&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Extracts the array value if it is an array.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_array\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_array</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Tests whether this value is an array.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_table\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_table</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;Map&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>, Value&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Extracts the table value if it is a table.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_table_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_table_mut</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut Map&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>, Value&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Extracts the table value if it is a table.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_table\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_table</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Tests whether this value is a table.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.same_type\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">same_type</a>(&amp;self, other: &amp;Value) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Tests whether this and another value have the same type.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_str\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">type_str</a>(&amp;self) -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.str.html\">str</a></h4></section></summary><div class=\"docblock\"><p>Returns a human-readable representation of the type of this value.</p>\n</div></details></div></details>",0,"tide_disco::AppState"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Ci64%3E-for-Value\" class=\"impl\"><a href=\"#impl-From%3Ci64%3E-for-Value\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>&gt; for Value</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i64.html\">i64</a>) -&gt; Value</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<i64>","tide_disco::AppState"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CBTreeMap%3CS,+V%3E%3E-for-Value\" class=\"impl\"><a href=\"#impl-From%3CBTreeMap%3CS,+V%3E%3E-for-Value\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, V&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/collections/btree/map/struct.BTreeMap.html\" title=\"struct alloc::collections::btree::map::BTreeMap\">BTreeMap</a>&lt;S, V&gt;&gt; for Value<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;Value&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/collections/btree/map/struct.BTreeMap.html\" title=\"struct alloc::collections::btree::map::BTreeMap\">BTreeMap</a>&lt;S, V&gt;) -&gt; Value</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<BTreeMap<S, V>>","tide_disco::AppState"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CHashMap%3CS,+V%3E%3E-for-Value\" class=\"impl\"><a href=\"#impl-From%3CHashMap%3CS,+V%3E%3E-for-Value\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, V&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/std/collections/hash/map/struct.HashMap.html\" title=\"struct std::collections::hash::map::HashMap\">HashMap</a>&lt;S, V&gt;&gt; for Value<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;Value&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/std/collections/hash/map/struct.HashMap.html\" title=\"struct std::collections::hash::map::HashMap\">HashMap</a>&lt;S, V&gt;) -&gt; Value</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<HashMap<S, V>>","tide_disco::AppState"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CMap%3CString,+Value%3E%3E-for-Value\" class=\"impl\"><a href=\"#impl-From%3CMap%3CString,+Value%3E%3E-for-Value\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Map&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>, Value&gt;&gt; for Value</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Map&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>, Value&gt;) -&gt; Value</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Map<String, Value>>","tide_disco::AppState"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu8%3E-for-Value\" class=\"impl\"><a href=\"#impl-From%3Cu8%3E-for-Value\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>&gt; for Value</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u8.html\">u8</a>) -&gt; Value</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<u8>","tide_disco::AppState"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cf32%3E-for-Value\" class=\"impl\"><a href=\"#impl-From%3Cf32%3E-for-Value\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.f32.html\">f32</a>&gt; for Value</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.f32.html\">f32</a>) -&gt; Value</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<f32>","tide_disco::AppState"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CVec%3CV%3E%3E-for-Value\" class=\"impl\"><a href=\"#impl-From%3CVec%3CV%3E%3E-for-Value\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;V&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;V&gt;&gt; for Value<div class=\"where\">where\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;Value&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;V&gt;) -&gt; Value</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Vec<V>>","tide_disco::AppState"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Ci32%3E-for-Value\" class=\"impl\"><a href=\"#impl-From%3Ci32%3E-for-Value\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>&gt; for Value</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i32.html\">i32</a>) -&gt; Value</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<i32>","tide_disco::AppState"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CString%3E-for-Value\" class=\"impl\"><a href=\"#impl-From%3CString%3E-for-Value\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt; for Value</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>) -&gt; Value</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<String>","tide_disco::AppState"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Ci8%3E-for-Value\" class=\"impl\"><a href=\"#impl-From%3Ci8%3E-for-Value\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>&gt; for Value</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.i8.html\">i8</a>) -&gt; Value</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<i8>","tide_disco::AppState"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cf64%3E-for-Value\" class=\"impl\"><a href=\"#impl-From%3Cf64%3E-for-Value\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.f64.html\">f64</a>&gt; for Value</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.f64.html\">f64</a>) -&gt; Value</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<f64>","tide_disco::AppState"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CDatetime%3E-for-Value\" class=\"impl\"><a href=\"#impl-From%3CDatetime%3E-for-Value\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Datetime&gt; for Value</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Datetime) -&gt; Value</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Datetime>","tide_disco::AppState"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu32%3E-for-Value\" class=\"impl\"><a href=\"#impl-From%3Cu32%3E-for-Value\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>&gt; for Value</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u32.html\">u32</a>) -&gt; Value</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<u32>","tide_disco::AppState"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cbool%3E-for-Value\" class=\"impl\"><a href=\"#impl-From%3Cbool%3E-for-Value\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>&gt; for Value</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>) -&gt; Value</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<bool>","tide_disco::AppState"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26str%3E-for-Value\" class=\"impl\"><a href=\"#impl-From%3C%26str%3E-for-Value\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.str.html\">str</a>&gt; for Value</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.str.html\">str</a>) -&gt; Value</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<&'a str>","tide_disco::AppState"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserializer%3C'de%3E-for-Value\" class=\"impl\"><a href=\"#impl-Deserializer%3C'de%3E-for-Value\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt; for Value</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = Error</h4></section></summary><div class='docblock'>The error type that can be returned if some error occurs during\ndeserialization.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize_any\" class=\"method trait-impl\"><a href=\"#method.deserialize_any\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#tymethod.deserialize_any\" class=\"fn\">deserialize_any</a>&lt;V&gt;(\n    self,\n    visitor: V\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;V as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html\" title=\"trait serde::de::Visitor\">Visitor</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html#associatedtype.Value\" title=\"type serde::de::Visitor::Value\">Value</a>, Error&gt;<div class=\"where\">where\n    V: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html\" title=\"trait serde::de::Visitor\">Visitor</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Require the <code>Deserializer</code> to figure out how to drive the visitor based\non what data type is in the input. <a href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#tymethod.deserialize_any\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize_enum\" class=\"method trait-impl\"><a href=\"#method.deserialize_enum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#tymethod.deserialize_enum\" class=\"fn\">deserialize_enum</a>&lt;V&gt;(\n    self,\n    _name: &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.str.html\">str</a>,\n    _variants: &amp;'static [&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.str.html\">str</a>],\n    visitor: V\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;V as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html\" title=\"trait serde::de::Visitor\">Visitor</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html#associatedtype.Value\" title=\"type serde::de::Visitor::Value\">Value</a>, Error&gt;<div class=\"where\">where\n    V: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html\" title=\"trait serde::de::Visitor\">Visitor</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Hint that the <code>Deserialize</code> type is expecting an enum value with a\nparticular name and possible variants.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize_option\" class=\"method trait-impl\"><a href=\"#method.deserialize_option\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#tymethod.deserialize_option\" class=\"fn\">deserialize_option</a>&lt;V&gt;(\n    self,\n    visitor: V\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;V as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html\" title=\"trait serde::de::Visitor\">Visitor</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html#associatedtype.Value\" title=\"type serde::de::Visitor::Value\">Value</a>, Error&gt;<div class=\"where\">where\n    V: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html\" title=\"trait serde::de::Visitor\">Visitor</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Hint that the <code>Deserialize</code> type is expecting an optional value. <a href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#tymethod.deserialize_option\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize_newtype_struct\" class=\"method trait-impl\"><a href=\"#method.deserialize_newtype_struct\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#tymethod.deserialize_newtype_struct\" class=\"fn\">deserialize_newtype_struct</a>&lt;V&gt;(\n    self,\n    _name: &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.str.html\">str</a>,\n    visitor: V\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;V as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html\" title=\"trait serde::de::Visitor\">Visitor</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html#associatedtype.Value\" title=\"type serde::de::Visitor::Value\">Value</a>, Error&gt;<div class=\"where\">where\n    V: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html\" title=\"trait serde::de::Visitor\">Visitor</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Hint that the <code>Deserialize</code> type is expecting a newtype struct with a\nparticular name.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize_bool\" class=\"method trait-impl\"><a href=\"#method.deserialize_bool\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#tymethod.deserialize_bool\" class=\"fn\">deserialize_bool</a>&lt;V&gt;(\n    self,\n    visitor: V\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;V as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html\" title=\"trait serde::de::Visitor\">Visitor</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html#associatedtype.Value\" title=\"type serde::de::Visitor::Value\">Value</a>, &lt;Value as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    V: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html\" title=\"trait serde::de::Visitor\">Visitor</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Hint that the <code>Deserialize</code> type is expecting a <code>bool</code> value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize_u8\" class=\"method trait-impl\"><a href=\"#method.deserialize_u8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#tymethod.deserialize_u8\" class=\"fn\">deserialize_u8</a>&lt;V&gt;(\n    self,\n    visitor: V\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;V as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html\" title=\"trait serde::de::Visitor\">Visitor</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html#associatedtype.Value\" title=\"type serde::de::Visitor::Value\">Value</a>, &lt;Value as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    V: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html\" title=\"trait serde::de::Visitor\">Visitor</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Hint that the <code>Deserialize</code> type is expecting a <code>u8</code> value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize_u16\" class=\"method trait-impl\"><a href=\"#method.deserialize_u16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#tymethod.deserialize_u16\" class=\"fn\">deserialize_u16</a>&lt;V&gt;(\n    self,\n    visitor: V\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;V as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html\" title=\"trait serde::de::Visitor\">Visitor</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html#associatedtype.Value\" title=\"type serde::de::Visitor::Value\">Value</a>, &lt;Value as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    V: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html\" title=\"trait serde::de::Visitor\">Visitor</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Hint that the <code>Deserialize</code> type is expecting a <code>u16</code> value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize_u32\" class=\"method trait-impl\"><a href=\"#method.deserialize_u32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#tymethod.deserialize_u32\" class=\"fn\">deserialize_u32</a>&lt;V&gt;(\n    self,\n    visitor: V\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;V as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html\" title=\"trait serde::de::Visitor\">Visitor</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html#associatedtype.Value\" title=\"type serde::de::Visitor::Value\">Value</a>, &lt;Value as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    V: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html\" title=\"trait serde::de::Visitor\">Visitor</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Hint that the <code>Deserialize</code> type is expecting a <code>u32</code> value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize_u64\" class=\"method trait-impl\"><a href=\"#method.deserialize_u64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#tymethod.deserialize_u64\" class=\"fn\">deserialize_u64</a>&lt;V&gt;(\n    self,\n    visitor: V\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;V as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html\" title=\"trait serde::de::Visitor\">Visitor</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html#associatedtype.Value\" title=\"type serde::de::Visitor::Value\">Value</a>, &lt;Value as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    V: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html\" title=\"trait serde::de::Visitor\">Visitor</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Hint that the <code>Deserialize</code> type is expecting a <code>u64</code> value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize_i8\" class=\"method trait-impl\"><a href=\"#method.deserialize_i8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#tymethod.deserialize_i8\" class=\"fn\">deserialize_i8</a>&lt;V&gt;(\n    self,\n    visitor: V\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;V as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html\" title=\"trait serde::de::Visitor\">Visitor</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html#associatedtype.Value\" title=\"type serde::de::Visitor::Value\">Value</a>, &lt;Value as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    V: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html\" title=\"trait serde::de::Visitor\">Visitor</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Hint that the <code>Deserialize</code> type is expecting an <code>i8</code> value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize_i16\" class=\"method trait-impl\"><a href=\"#method.deserialize_i16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#tymethod.deserialize_i16\" class=\"fn\">deserialize_i16</a>&lt;V&gt;(\n    self,\n    visitor: V\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;V as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html\" title=\"trait serde::de::Visitor\">Visitor</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html#associatedtype.Value\" title=\"type serde::de::Visitor::Value\">Value</a>, &lt;Value as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    V: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html\" title=\"trait serde::de::Visitor\">Visitor</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Hint that the <code>Deserialize</code> type is expecting an <code>i16</code> value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize_i32\" class=\"method trait-impl\"><a href=\"#method.deserialize_i32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#tymethod.deserialize_i32\" class=\"fn\">deserialize_i32</a>&lt;V&gt;(\n    self,\n    visitor: V\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;V as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html\" title=\"trait serde::de::Visitor\">Visitor</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html#associatedtype.Value\" title=\"type serde::de::Visitor::Value\">Value</a>, &lt;Value as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    V: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html\" title=\"trait serde::de::Visitor\">Visitor</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Hint that the <code>Deserialize</code> type is expecting an <code>i32</code> value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize_i64\" class=\"method trait-impl\"><a href=\"#method.deserialize_i64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#tymethod.deserialize_i64\" class=\"fn\">deserialize_i64</a>&lt;V&gt;(\n    self,\n    visitor: V\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;V as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html\" title=\"trait serde::de::Visitor\">Visitor</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html#associatedtype.Value\" title=\"type serde::de::Visitor::Value\">Value</a>, &lt;Value as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    V: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html\" title=\"trait serde::de::Visitor\">Visitor</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Hint that the <code>Deserialize</code> type is expecting an <code>i64</code> value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize_f32\" class=\"method trait-impl\"><a href=\"#method.deserialize_f32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#tymethod.deserialize_f32\" class=\"fn\">deserialize_f32</a>&lt;V&gt;(\n    self,\n    visitor: V\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;V as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html\" title=\"trait serde::de::Visitor\">Visitor</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html#associatedtype.Value\" title=\"type serde::de::Visitor::Value\">Value</a>, &lt;Value as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    V: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html\" title=\"trait serde::de::Visitor\">Visitor</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Hint that the <code>Deserialize</code> type is expecting a <code>f32</code> value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize_f64\" class=\"method trait-impl\"><a href=\"#method.deserialize_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#tymethod.deserialize_f64\" class=\"fn\">deserialize_f64</a>&lt;V&gt;(\n    self,\n    visitor: V\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;V as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html\" title=\"trait serde::de::Visitor\">Visitor</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html#associatedtype.Value\" title=\"type serde::de::Visitor::Value\">Value</a>, &lt;Value as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    V: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html\" title=\"trait serde::de::Visitor\">Visitor</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Hint that the <code>Deserialize</code> type is expecting a <code>f64</code> value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize_char\" class=\"method trait-impl\"><a href=\"#method.deserialize_char\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#tymethod.deserialize_char\" class=\"fn\">deserialize_char</a>&lt;V&gt;(\n    self,\n    visitor: V\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;V as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html\" title=\"trait serde::de::Visitor\">Visitor</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html#associatedtype.Value\" title=\"type serde::de::Visitor::Value\">Value</a>, &lt;Value as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    V: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html\" title=\"trait serde::de::Visitor\">Visitor</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Hint that the <code>Deserialize</code> type is expecting a <code>char</code> value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize_str\" class=\"method trait-impl\"><a href=\"#method.deserialize_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#tymethod.deserialize_str\" class=\"fn\">deserialize_str</a>&lt;V&gt;(\n    self,\n    visitor: V\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;V as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html\" title=\"trait serde::de::Visitor\">Visitor</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html#associatedtype.Value\" title=\"type serde::de::Visitor::Value\">Value</a>, &lt;Value as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    V: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html\" title=\"trait serde::de::Visitor\">Visitor</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Hint that the <code>Deserialize</code> type is expecting a string value and does\nnot benefit from taking ownership of buffered data owned by the\n<code>Deserializer</code>. <a href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#tymethod.deserialize_str\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize_string\" class=\"method trait-impl\"><a href=\"#method.deserialize_string\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#tymethod.deserialize_string\" class=\"fn\">deserialize_string</a>&lt;V&gt;(\n    self,\n    visitor: V\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;V as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html\" title=\"trait serde::de::Visitor\">Visitor</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html#associatedtype.Value\" title=\"type serde::de::Visitor::Value\">Value</a>, &lt;Value as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    V: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html\" title=\"trait serde::de::Visitor\">Visitor</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Hint that the <code>Deserialize</code> type is expecting a string value and would\nbenefit from taking ownership of buffered data owned by the\n<code>Deserializer</code>. <a href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#tymethod.deserialize_string\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize_unit\" class=\"method trait-impl\"><a href=\"#method.deserialize_unit\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#tymethod.deserialize_unit\" class=\"fn\">deserialize_unit</a>&lt;V&gt;(\n    self,\n    visitor: V\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;V as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html\" title=\"trait serde::de::Visitor\">Visitor</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html#associatedtype.Value\" title=\"type serde::de::Visitor::Value\">Value</a>, &lt;Value as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    V: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html\" title=\"trait serde::de::Visitor\">Visitor</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Hint that the <code>Deserialize</code> type is expecting a unit value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize_seq\" class=\"method trait-impl\"><a href=\"#method.deserialize_seq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#tymethod.deserialize_seq\" class=\"fn\">deserialize_seq</a>&lt;V&gt;(\n    self,\n    visitor: V\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;V as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html\" title=\"trait serde::de::Visitor\">Visitor</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html#associatedtype.Value\" title=\"type serde::de::Visitor::Value\">Value</a>, &lt;Value as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    V: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html\" title=\"trait serde::de::Visitor\">Visitor</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Hint that the <code>Deserialize</code> type is expecting a sequence of values.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize_bytes\" class=\"method trait-impl\"><a href=\"#method.deserialize_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#tymethod.deserialize_bytes\" class=\"fn\">deserialize_bytes</a>&lt;V&gt;(\n    self,\n    visitor: V\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;V as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html\" title=\"trait serde::de::Visitor\">Visitor</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html#associatedtype.Value\" title=\"type serde::de::Visitor::Value\">Value</a>, &lt;Value as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    V: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html\" title=\"trait serde::de::Visitor\">Visitor</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Hint that the <code>Deserialize</code> type is expecting a byte array and does not\nbenefit from taking ownership of buffered data owned by the\n<code>Deserializer</code>. <a href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#tymethod.deserialize_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize_byte_buf\" class=\"method trait-impl\"><a href=\"#method.deserialize_byte_buf\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#tymethod.deserialize_byte_buf\" class=\"fn\">deserialize_byte_buf</a>&lt;V&gt;(\n    self,\n    visitor: V\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;V as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html\" title=\"trait serde::de::Visitor\">Visitor</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html#associatedtype.Value\" title=\"type serde::de::Visitor::Value\">Value</a>, &lt;Value as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    V: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html\" title=\"trait serde::de::Visitor\">Visitor</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Hint that the <code>Deserialize</code> type is expecting a byte array and would\nbenefit from taking ownership of buffered data owned by the\n<code>Deserializer</code>. <a href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#tymethod.deserialize_byte_buf\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize_map\" class=\"method trait-impl\"><a href=\"#method.deserialize_map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#tymethod.deserialize_map\" class=\"fn\">deserialize_map</a>&lt;V&gt;(\n    self,\n    visitor: V\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;V as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html\" title=\"trait serde::de::Visitor\">Visitor</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html#associatedtype.Value\" title=\"type serde::de::Visitor::Value\">Value</a>, &lt;Value as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    V: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html\" title=\"trait serde::de::Visitor\">Visitor</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Hint that the <code>Deserialize</code> type is expecting a map of key-value pairs.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize_unit_struct\" class=\"method trait-impl\"><a href=\"#method.deserialize_unit_struct\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#tymethod.deserialize_unit_struct\" class=\"fn\">deserialize_unit_struct</a>&lt;V&gt;(\n    self,\n    name: &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.str.html\">str</a>,\n    visitor: V\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;V as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html\" title=\"trait serde::de::Visitor\">Visitor</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html#associatedtype.Value\" title=\"type serde::de::Visitor::Value\">Value</a>, &lt;Value as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    V: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html\" title=\"trait serde::de::Visitor\">Visitor</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Hint that the <code>Deserialize</code> type is expecting a unit struct with a\nparticular name.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize_tuple_struct\" class=\"method trait-impl\"><a href=\"#method.deserialize_tuple_struct\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#tymethod.deserialize_tuple_struct\" class=\"fn\">deserialize_tuple_struct</a>&lt;V&gt;(\n    self,\n    name: &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.str.html\">str</a>,\n    len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>,\n    visitor: V\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;V as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html\" title=\"trait serde::de::Visitor\">Visitor</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html#associatedtype.Value\" title=\"type serde::de::Visitor::Value\">Value</a>, &lt;Value as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    V: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html\" title=\"trait serde::de::Visitor\">Visitor</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Hint that the <code>Deserialize</code> type is expecting a tuple struct with a\nparticular name and number of fields.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize_struct\" class=\"method trait-impl\"><a href=\"#method.deserialize_struct\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#tymethod.deserialize_struct\" class=\"fn\">deserialize_struct</a>&lt;V&gt;(\n    self,\n    name: &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.str.html\">str</a>,\n    fields: &amp;'static [&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.str.html\">str</a>],\n    visitor: V\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;V as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html\" title=\"trait serde::de::Visitor\">Visitor</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html#associatedtype.Value\" title=\"type serde::de::Visitor::Value\">Value</a>, &lt;Value as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    V: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html\" title=\"trait serde::de::Visitor\">Visitor</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Hint that the <code>Deserialize</code> type is expecting a struct with a particular\nname and fields.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize_tuple\" class=\"method trait-impl\"><a href=\"#method.deserialize_tuple\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#tymethod.deserialize_tuple\" class=\"fn\">deserialize_tuple</a>&lt;V&gt;(\n    self,\n    len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>,\n    visitor: V\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;V as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html\" title=\"trait serde::de::Visitor\">Visitor</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html#associatedtype.Value\" title=\"type serde::de::Visitor::Value\">Value</a>, &lt;Value as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    V: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html\" title=\"trait serde::de::Visitor\">Visitor</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Hint that the <code>Deserialize</code> type is expecting a sequence of values and\nknows how many values there are without looking at the serialized data.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize_ignored_any\" class=\"method trait-impl\"><a href=\"#method.deserialize_ignored_any\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#tymethod.deserialize_ignored_any\" class=\"fn\">deserialize_ignored_any</a>&lt;V&gt;(\n    self,\n    visitor: V\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;V as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html\" title=\"trait serde::de::Visitor\">Visitor</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html#associatedtype.Value\" title=\"type serde::de::Visitor::Value\">Value</a>, &lt;Value as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    V: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html\" title=\"trait serde::de::Visitor\">Visitor</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Hint that the <code>Deserialize</code> type needs to deserialize a value whose type\ndoesn’t matter because it is ignored. <a href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#tymethod.deserialize_ignored_any\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize_identifier\" class=\"method trait-impl\"><a href=\"#method.deserialize_identifier\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#tymethod.deserialize_identifier\" class=\"fn\">deserialize_identifier</a>&lt;V&gt;(\n    self,\n    visitor: V\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;V as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html\" title=\"trait serde::de::Visitor\">Visitor</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html#associatedtype.Value\" title=\"type serde::de::Visitor::Value\">Value</a>, &lt;Value as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    V: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html\" title=\"trait serde::de::Visitor\">Visitor</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Hint that the <code>Deserialize</code> type is expecting the name of a struct\nfield or the discriminant of an enum variant.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize_i128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.193/src/serde/de/mod.rs.html#954-956\">source</a><a href=\"#method.deserialize_i128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#method.deserialize_i128\" class=\"fn\">deserialize_i128</a>&lt;V&gt;(\n    self,\n    visitor: V\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;V as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html\" title=\"trait serde::de::Visitor\">Visitor</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html#associatedtype.Value\" title=\"type serde::de::Visitor::Value\">Value</a>, Self::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    V: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html\" title=\"trait serde::de::Visitor\">Visitor</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Hint that the <code>Deserialize</code> type is expecting an <code>i128</code> value. <a href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#method.deserialize_i128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize_u128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.193/src/serde/de/mod.rs.html#985-987\">source</a><a href=\"#method.deserialize_u128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#method.deserialize_u128\" class=\"fn\">deserialize_u128</a>&lt;V&gt;(\n    self,\n    visitor: V\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;V as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html\" title=\"trait serde::de::Visitor\">Visitor</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html#associatedtype.Value\" title=\"type serde::de::Visitor::Value\">Value</a>, Self::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    V: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Visitor.html\" title=\"trait serde::de::Visitor\">Visitor</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Hint that the <code>Deserialize</code> type is expecting an <code>u128</code> value. <a href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#method.deserialize_u128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_human_readable\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.193/src/serde/de/mod.rs.html#1216\">source</a><a href=\"#method.is_human_readable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#method.is_human_readable\" class=\"fn\">is_human_readable</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Determine whether <code>Deserialize</code> implementations should expect to\ndeserialize their human-readable form. <a href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#method.is_human_readable\">Read more</a></div></details></div></details>","Deserializer<'de>","tide_disco::AppState"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Value\" class=\"impl\"><a href=\"#impl-Debug-for-Value\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for Value</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","tide_disco::AppState"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Value\" class=\"impl\"><a href=\"#impl-PartialEq-for-Value\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for Value</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Value) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/cmp.rs.html#242\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","tide_disco::AppState"],["<section id=\"impl-StructuralPartialEq-for-Value\" class=\"impl\"><a href=\"#impl-StructuralPartialEq-for-Value\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for Value</h3></section>","StructuralPartialEq","tide_disco::AppState"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Value\" class=\"impl\"><a href=\"#impl-Clone-for-Value\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for Value</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Value</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","tide_disco::AppState"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexMut%3CI%3E-for-Value\" class=\"impl\"><a href=\"#impl-IndexMut%3CI%3E-for-Value\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/index/trait.IndexMut.html\" title=\"trait core::ops::index::IndexMut\">IndexMut</a>&lt;I&gt; for Value<div class=\"where\">where\n    I: Index,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index_mut\" class=\"method trait-impl\"><a href=\"#method.index_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\" class=\"fn\">index_mut</a>(&amp;mut self, index: I) -&gt; &amp;mut Value</h4></section></summary><div class='docblock'>Performs the mutable indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\">Read more</a></div></details></div></details>","IndexMut<I>","tide_disco::AppState"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-Value\" class=\"impl\"><a href=\"#impl-FromStr-for-Value\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for Value</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = Error</h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/str/traits/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(s: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, &lt;Value as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" title=\"type core::str::traits::FromStr::Err\">Err</a>&gt;</h4></section></summary><div class='docblock'>Parses a string <code>s</code> to return a value of this type. <a href=\"https://doc.rust-lang.org/1.76.0/core/str/traits/trait.FromStr.html#tymethod.from_str\">Read more</a></div></details></div></details>","FromStr","tide_disco::AppState"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoDeserializer%3C'de,+Error%3E-for-Value\" class=\"impl\"><a href=\"#impl-IntoDeserializer%3C'de,+Error%3E-for-Value\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.IntoDeserializer.html\" title=\"trait serde::de::IntoDeserializer\">IntoDeserializer</a>&lt;'de, Error&gt; for Value</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Deserializer\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Deserializer\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/serde/1.0.193/serde/de/trait.IntoDeserializer.html#associatedtype.Deserializer\" class=\"associatedtype\">Deserializer</a> = Value</h4></section></summary><div class='docblock'>The type of the deserializer being converted into.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_deserializer\" class=\"method trait-impl\"><a href=\"#method.into_deserializer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.193/serde/de/trait.IntoDeserializer.html#tymethod.into_deserializer\" class=\"fn\">into_deserializer</a>(self) -&gt; Value</h4></section></summary><div class='docblock'>Convert this value into a deserializer.</div></details></div></details>","IntoDeserializer<'de, Error>","tide_disco::AppState"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-Value\" class=\"impl\"><a href=\"#impl-Display-for-Value\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for Value</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","tide_disco::AppState"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CI%3E-for-Value\" class=\"impl\"><a href=\"#impl-Index%3CI%3E-for-Value\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;I&gt; for Value<div class=\"where\">where\n    I: Index,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Value</h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, index: I) -&gt; &amp;Value</h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<I>","tide_disco::AppState"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-Value\" class=\"impl\"><a href=\"#impl-Deserialize%3C'de%3E-for-Value\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for Value</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Value, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","tide_disco::AppState"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-Value\" class=\"impl\"><a href=\"#impl-Serialize-for-Value\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for Value</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","tide_disco::AppState"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()